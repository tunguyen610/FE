

@{
    @using A2F.Util;
    ViewData["Title"] = "Tài khoản";
    Layout = "_NovaticAdmin";
}

<style>
    .column-name,
    .column-createdTime,
    .column-validTime,
    .column-openTime,
    .column-closeTime {
        white-space: nowrap !important;
    }

    .column-accountTypeID {
        text-align: center;
    }

    .btn-danger, td button:nth-child(1), .btn-success, td button:nth-child(2) {
        width: 100%;
        /*height: 6vh;*/
        margin-top: 8px;
        padding: 5px !important;
    }
    /*.btn-primary{
        width:25%;
        height:4vh;
        font-size: 0.6em;
        padding: 0px;
        margin-top:5px;
        margin-right: 25vh;
    }*/
    /*td button:nth-child(2) {
            width: 40%;
            height: 3vh;
            font-size: 0.6em;
            padding: 0px;
            /*margin-top:5px;
    margin-right: 25vh;
    }

    */


    .column-photo img {
        width: 40px;
        height: auto;
    }

    .dataTable.table tbody td:nth-child(3) {
        max-width: 100px !important;
    }
</style>


<div class="page-header card">
    <div class="col">
        <div class="page-header-title">
            <i class="fa fa-server"></i>
            <div class="d-inline">
                <h3 class="tableTitle">Tài khoản</h3>
            </div>
        </div>

        <a href="#" id="btnAddItem" onclick="editItem(0);" class="btn btn-brand btn-elevate btn-icon-sm" style="display:none;">
            <i class="fa fa-plus"></i>
            <span class='hideOnMobile'>Thêm danh mục</span>
        </a>
    </div>
</div>

<div class="pcoded-inner-content">
    <div class="main-body">
        <div class="page-wrapper">

            <!-- Page-body start -->
            <div class="page-body">
                <div class="card">
                    <div class="card-block novaticContainer">
                        <div class="dt-responsive table-responsive">

                            <table id="tableData" class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>ID</th>
                                        <th>Loại tài khoản</th>
                                        <th>Tên</th>
                                        <th>Email</th>
                                        <th>Tên đăng nhập</th>
                                        <th>Ảnh</th>
                                        <th>Số điện thoại</th>
                                        @*<th>Mô tả</th>*@
                                        <th>Ngày tạo</th>
                                        <th>Kích hoạt</th>

                                        <th>Chi tiết</th>
                                        <th>Xóa</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>STT</th>
                                        <th>ID</th>
                                        <th>Loại tài khoản</th>
                                        <th>Tên</th>
                                        <th>Email</th>
                                        <th>Tên đăng nhập</th>
                                        <th>Số điện thoại</th>
                                        <th>Ảnh</th>
                                        @*<th>Mô tả</th>*@
                                        <th>Ngày tạo</th>
                                        <th>Kích hoạt</th>

                                        <th> </th>
                                        <th> </th>
                                    </tr>
                                </tfoot>
                            </table>

                            <div class="modal fade" id="modal-id">
                                <div class="modal-dialog modal-lg" style="width:80%">
                                    <div class="modal-content">
                                        <div class="modal-header bg-gradient-info">
                                            <button type="button" class="close" data-dismiss="modal"
                                                    aria-hidden="true">
                                                &times;
                                            </button>
                                            <h4 class="modal-title"><i class="fa fa-edit"></i> Chi tiết tài khoản</h4>
                                        </div>
                                        <div class="modal-body">


                                            <form action="" method="POST"
                                                  onsubmit='updateItem(updatingItemID); return false;' role="form">

                                                <!-- <div class="form-group">
        <label for="">Apply type ID</label>
        <input type="text" class="form-control"
            id="accountId" required readonly
            placeholder="">
    </div>


    <div class='form-group'>
        <label for=''>Apply type name</label>
        <input type='text' class='form-control'
            id='accountName' required
            placeholder=''>
    </div>


    <div class='form-group'>
        <label for=''>Description</label>
        <input type='text' class='form-control'
            id='accountDescription'
            placeholder=''>
    </div>


    <div class='form-group'>
        <label for=''>CreatedTime</label>
        <input type='text'
            class='form-control datetimepicker'
            id='accountCreatedTime'
            placeholder=''>
    </div>


    <div class='form-group' style="">
        <label for=''>Active</label>
        <input type='text' class='form-control'
            id='accountActive' readonly
            placeholder=''>
    </div>


    -->


                                                <div class="form-group col-sm-4">
                                                    <label for="">ID</label><span class='required'>*</span>
                                                    <input type="number" class="form-control input-id" value="0"
                                                           id="accountId" required readonly
                                                           placeholder="">
                                                </div>

                                                <div class='form-group  col-sm-4 selectContainer' style="padding:0px">
                                                    <label class=''>Loại tài khoản</label><span class='required'>*</span>
                                                    <div class='col-sm-12'>
                                                        <select name='select' required id='accountAccountTypeID'  class='form-control fill dataSelect  input-accountTypeID' style=' border: 1px solid #e9ecef; '>
                                                        </select>
                                                    </div>
                                                </div>
                                                <script>
                                                    var accountTypeData = [];
                                                    function loadDataSelectAccountType() {
                                                        $.ajax({
                                                            url: "@{@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description}/accountType/api/list",
                                                            type: 'GET',
                                                            async: 'true',
                                                            contentType: 'application/json',
                                                            success: function (responseData) {
                                                                console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded accountType');
                                                                // debugger;
                                                                var data = responseData.data;
                                                                accountTypeData = data;
                                                                data.forEach(function (item, index) {
                                                                    var data = {
                                                                        id: item.id,
                                                                        text: item.name
                                                                    };
                                                                    var newOption = new Option(data.text, data.id, false, false);
                                                                    $('#accountAccountTypeID').append(newOption).trigger('change');
                                                                });
                                                            },
                                                            error: function (e) {
                                                                //console.log(e.message);
                                                            }
                                                        });
                                                    }
                                                    $(document).ready(function () {
                                                        loadDataSelectAccountType();
                                                    });
                                                </script>





                                                <div class="form-group" style="display:none ">
                                                    <label for="">Active</label><span class='required'>*</span>
                                                    <input type="number" class="form-control input-active" value="0"
                                                           id="accountActive" required
                                                           placeholder="">
                                                </div>





                                                <div class="form-group col-sm-4">
                                                    <label for="">Tên</label><span class='required'>*</span>
                                                    <input type="text" class="form-control  input-name"
                                                           id="accountName" required
                                                           placeholder="">
                                                </div>




                                                <div class="form-group  col-sm-4">
                                                    <label for="">Email</label><span class='required'>*</span>
                                                    <input type="text" class="form-control  input-email"
                                                           id="accountEmail" required
                                                           placeholder="">
                                                </div>
                                                <div class="form-group  col-sm-4">
                                                    <label for="">Tên đăng nhập</label><span></span>
                                                    <input type="text" class="form-control  input-username"
                                                           id="accountUsername" required
                                                           placeholder="">
                                                </div>
                                                <div class="form-group  col-sm-4" style="display:none">
                                                    <label for="">Mật khẩu</label><span class='required'>*</span>
                                                    <input type="text" class="form-control  input-password"
                                                           id="accountPassword" 
                                                           placeholder="">
                                                </div>

                                                <div class="form-group  col-sm-4">
                                                    <label for="">Số điện thoại</label><span></span>
                                                    <input type="text" class="form-control  input-phone"
                                                           id="accountPhone"
                                                           placeholder="">
                                                </div>


                                                <div class="form-group  col-sm-4">
                                                    <label for="">Số CMT</label><span></span>
                                                    <input type="text" class="form-control  input-idCardNumber"
                                                           id="accountIdCardNumber"
                                                           placeholder="">
                                                </div>



                                                <div class="form-group  col-sm-4 ">
                                                    <label for="">Số ĐKKD</label><span></span>
                                                    <input type="text" class="form-control  input-companyNumber"
                                                           id="accountCompanyNumber"
                                                           placeholder="">
                                                </div>

                                                <div class="form-group  col-sm-4">
                                                    <label for="">Tên công ty</label><span></span>
                                                    <input type="text" class="form-control  input-companyName"
                                                           id="accountCompanyName"
                                                           placeholder="">
                                                </div>

                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for="">Thông tin công ty</label><span></span>
                                                    <input type="text" class="form-control  input-companyInfo"
                                                           id="accountCompanyInfo"
                                                           placeholder="">
                                                </div>

                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for="">Facebook ID</label><span></span>
                                                    <input type="text" class="form-control  input-facebookId"
                                                           id="accountFacebookId"
                                                           placeholder="">
                                                </div>

                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for="">Google ID</label><span></span>
                                                    <input type="text" class="form-control  input-googleId"
                                                           id="accountGoogleId"
                                                           placeholder="">
                                                </div>

                                                @*<div class="form-group">
            <label for="">Ảnh</label>
            <textarea class="form-control  input-photo " rows="2" id="accountPhoto"></textarea>
        </div>*@




                                                <div class='form-group  col-sm-4'>
                                                    <label for=''>Ngày tạo </label><span class='required'>*</span>
                                                    <div class='input-group date datetimepicker  input-createdTime' id='accountCreatedTimeDiv'>
                                                        <input type='text' id="accountCreatedTime" required class="form-control" readonly />
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </div>
                                                </div>


                                                <div class="form-group  col-sm-5">
                                                    <label for="">Photo</label><span></span>
                                                    <input type="text" class="form-control  input-photo"
                                                           id="accountPhoto"
                                                           placeholder="">

                                                    <span class="glyphicon glyphicon-open form-control-feedback input-photo"></span>
                                                </div>

                                                <div class="form-group col-sm-2 col-sm-offset-1">
                                                    <img id="input-photo-thumbnail" class="input-photo-thumbnail"
                                                         src="https://x.kinja-static.com/assets/images/logos/placeholders/default.png"
                                                         style="margin-bottom:-30px; height:40px;width:100%" />
                                                </div>

                                                <div style="height:1px; width:100%; clear:both"></div>


                                                @*<div class="form-group  col-sm-12" style="padding-left:unset">
            <div class="col-sm-4">
                <label for="">Photo</label>
                <input type="file" class="form-control  input-photo"
                       placeholder="" onchange="UploadFile(event)">
            </div>
            <div class="col-sm-4">
                <label for="">Photo URL</label>
                <input type="text" class="form-control  input-photo"
                       id="accountPhoto" placeholder="">
            </div>
            <div class="col-sm-2">
                <div class="form-group">
                    <img id="thumbnailPic"
                         src="https://x.kinja-static.com/assets/images/logos/placeholders/default.png"
                         style="margin-bottom:-30px; min-height:80px;width:100%" />
                </div>
            </div>
        </div>*@



                                                <div class="form-group  col-sm-4" style="display:none">
                                                    <label for="">Mô tả</label>
                                                    <textarea class="form-control  input-description " rows="2" id="accountDescription"></textarea>
                                                </div>

                                                <div class='form-group col-sm-4' style="display:none">
                                                    <label for=''>Ngày hết hạn Membership</label>
                                                    <div class='input-group date datetimepicker  input-createdTime' id='accountCreatedTimeDiv'>
                                                        <input type='text' id="dateEndMembership" class="form-control" />
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="form-group  col-sm-12">
                                                    <label for="">Thông tin giới thiệu</label>
                                                    <textarea class="form-control  input-info " rows="2" id="accountInfo"></textarea>
                                                </div>
                                                <div class="form-group  col-sm-4" style="display: none">
                                                    <label for="">Địa chỉ</label>
                                                    <textarea class="form-control  input-address " rows="2" id="accountAddress"></textarea>
                                                </div>
                                                @*Hiddent Item*@
                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for="">Ảnh mặt trước CMND</label><span></span>
                                                    <input type="text" class="form-control  input-companyName"
                                                           id="idCardNumberPhoto1"
                                                           placeholder="">
                                                </div>

                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for="">Ảnh mặt sau CMND</label><span></span>
                                                    <input type="text" class="form-control  input-companyName"
                                                           id="idCardNumberPhoto2"
                                                           placeholder="">
                                                </div>

                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for=''>Ngày sinh</label>
                                                    <div class='input-group date datetimepicker  input-createdTime' id='accountCreatedTimeDiv'>
                                                        <input type='text' id="doB" class="form-control" />
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for="">Zipcode</label><span></span>
                                                    <input type="text" class="form-control  input-companyName"
                                                           id="zipCode"
                                                           placeholder="">
                                                </div>
                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for="">Tỉnh/Thành phố</label><span></span>
                                                    <input type="text" class="form-control  input-companyName"
                                                           id="addressCity"
                                                           placeholder="">
                                                </div>
                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for="">Quận/Huyện</label><span></span>
                                                    <input type="text" class="form-control  input-companyName"
                                                           id="addressDistrict"
                                                           placeholder="">
                                                </div>
                                                <div class="form-group  col-sm-4 hidden">
                                                    <label for="">Xã/Phường</label><span></span>
                                                    <input type="text" class="form-control  input-companyName"
                                                           id="addressWard"
                                                           placeholder="">
                                                </div>


                                                <script>
                                                    //var accountInfoEditor = CKEDITOR.replace("accountInfo", {height:200});
                                                    //ClassicEditor
                                                    //    .create(document.querySelector('#accountInfo'))
                                                    //    .then(editor => {
                                                    //        // console.log( 'Editor was initialized', editor );
                                                    //        accountInfoEditor = editor;
                                                    //        editor.model.document.on('change:data', (evt, data) => {
                                                    //            // debugger;
                                                    //            // console.log('Updated:'+ data );
                                                    //            $('#accountInfo').val(accountInfoEditor.getData());
                                                    //        });
                                                    //    })
                                                    //    .catch(err => {
                                                    //        console.error(err.stack);
                                                    //    });
                                                </script>





                                                <input style="display:none" id="hiddenSubmit" type="submit"
                                                       class="btn btn-default" value="Save changes">
                                            </form>


                                        </div>
                                        <div class="modal-footer" style="clear:both">
                                            <button type="button" class="btn btn-default"
                                                    data-dismiss="modal">
                                                Đóng
                                            </button>
                                            <button type="button" class="btn btn-primary" id="btnUpdateItem"
                                                    onclick="document.getElementById('hiddenSubmit').click();">
                                                Lưu thông tin
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
    var UploadFile = function (e) {
        console.log(e);
        console.log(e.target.files[0].name);
        var file = e.target.files[0];
        var formData = new FormData();
        formData.append("file", file);
        axios.post("/Topic/api/SingleFile", formData);
        $("#accountPhoto").val("@{@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description}files/frontend/images/upload/" + e.target.files[0].name);
        setTimeout(function () { $("#thumbnailPic").attr("src", $("#accountPhoto").val()); }, 1000);
    }
</script>
<script>
    var hiddenItem = ["active", "password", "address", "info", "accountType", "accountMeta", "activityLog", "authentication", "comment", "description", "post", "accountTypeID", "accountTypeName", "idCardNumber", "facebookId", "googleId", "companyName", "companyInfo", "companyNumber", "idCardNumberPhoto1", "idCardNumberPhoto2", "doB", "zipcode", "addressCity", "addressDistrict", "addressWard"];
    var dataSource = [];
    var updatingItemID = 0;
    var tableUpdating = 0;
    var table;

    $(document).ready(function () {
        AutoDowngradeAccount();
        // Load data
        //loadData();
        setTimeout(function () { loadData(); }, 500);
        // includeLibrary();

        // Datetime picker
        $('.datetimepicker').datetimepicker({
            format: 'YYYY-MM-DD HH:mm:ss'
        });

        $('.dataSelect').select2();

        $(".datetimepicker").on('dp.change', function (e) {
            // console.log(this.value);
            this.value = moment(this.value).format("YYYY-MM-DD HH:mm:ss");
            // console.log(this.value);
        })

        $("#accountPhoto").change(function () {
            var url = this.value;
            //validate data

            //set new pic
            $("#thumbnailPic").attr("src", url);
        })

    });

    // hàm ajax tự động downgrade
    function AutoDowngradeAccount() {
        //debugger;
        //$.ajax({
        //    url: "/account/api/AutoDowngradeAccount",
        //    type: "GET",
        //    contentType: "application/json",
        //    success: function (responseData) {
        //        if (responseData.message == "SUCCESS") {
        //            console.log("Seccess auto downgrade account!");
        //        }
        //    },
        //    error: function (e) {
        //        console.log("Failed when auto downgrade account!");
        //    }
        //})
    }

    function loadData() {
        var accept = JSON.parse(localStorage.getItem("currentLoggedInUser"));
        var accept = JSON.parse(localStorage.getItem("currentLoggedInUser"));
        var x = document.getElementById("btnUpdateItem");
        if (accept.accountTypeName !== "System admin") {
            x.style.display = "none";
        }
        $.ajax({
            url: "@{@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description}account/api/list",
            type: "GET",
            contentType: "application/json",
            success: function (responseData) {
                 //debugger;
                var data = responseData.data;
                dataSource = data;




                data.forEach(function (item, index) {
                    // console.log(item, index);
                    var rowContent = "";
                    rowContent += "<td style='text-align: center;'>" + (index + 1) + "</td>";
                    for (var key in item) {
                        if (item.hasOwnProperty(key)) {
                            // console.log(key + " -> " + item[key]);
                            if (!hiddenItem.includes(key) && key!="accountTypeID") {
                                if (key == "isActivated") {
                                    if (item[key] == "0") {
                                        rowContent += "<td style='font-size: 1.2em; text-align:center;' class='row" + item.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-danger'>No</button></td>";
                                    }
                                    else {
                                        rowContent += "<td style='font-size: 1.2em; text-align:center;' class='row" + item.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-success'>Yes</button></td>";
                                    }
                                }
                                else if (key != "photo") {
                                    rowContent += "<td class='row" + item.id + "-column column-" + key + "' property='" + key + "'>" + item[key] + "</td>";
                                }
                                else {
                                    rowContent += "<td class='row" + item.id + "-column column-" + key + "' property='" + key + "'><img src='" + item[key] + "' style='height:40px;' /></td>";
                                }
                            }
                            if (key == "accountTypeID" && item[key] =="@SystemConstant.ACCOUNT_TYPE_SYSTEM_ADMIN" ) {
                                rowContent += "<td style='font-size: 1.2em; text-align:center;' class='row" + item.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-danger'>System admin</button></td>";
                            }

                            if (key == "accountTypeID" && item[key] == "@SystemConstant.ACCOUNT_TYPE_SHOP_MANAGER") {
                                rowContent += "<td style='font-size: 1.2em; text-align:center;' class='row" + item.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-primary'>Shop manager</button></td>";

                                //var x = item.id;
                                //rowContent += "<td style='font-size: 1.2em; text-align:center;' class='row" + item.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-default'>Free user</button> <button onclick='btnNangCap("+item.id+");' type='button' class='btn btn-primary'>nâng cấp</button></td>";
                            }
                            if (key == "accountTypeID" && item[key] == "@SystemConstant.ACCOUNT_TYPE_END_USER") {
                                rowContent += "<td style='font-size: 1.2em; text-align:center;' class='row" + item.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-success'>End user</button></td>";
                            }
                        }
                    }
                    rowContent += "<td style='text-align: center;'><a onclick='editItem(" + item.id + ")'><i class='fa fa-edit fa-2x' style='color:#03a9f4'></i></a></td>";
                    if (accept.accountTypeName === "System admin") {
                        rowContent += "<td style='text-align: center;'><a onclick='deleteItem(" + item.id + ")'><i class='fa fa-trash fa-2x' style='color:#e91e63'></i></a></td>";
                    } else {
                        rowContent += "<td style='text-align: center;'><a><i class='fa fa-trash fa-2x' style='color:#e91e63;cursor:not-allowed;opacity:0.3'></i></a></td>";
                    }
                    

                    var newRow = "<tr id='row" + item.id + "' >" + rowContent + "</tr>";
                    $(newRow).appendTo($("#tableData tbody"));

                    // $("#tableData #dummyRow").after("<tr id='row"+item.id+"' >" + rowContent + "</tr>");
                });

                //Init datatable
                if (tableUpdating === 0) {
                    initTablePage();
                }

                //update data with foreign key
                //updateTable();
                formatNumber();
            },
            error: function (e) {
                //console.log(e.message);
                initTablePage();
            }
        });
    }

    function initTable() {
        table = $('#tableData').DataTable({
            aLengthMenu: [
                [-1, 10, 25, 50, 100, 200],
                ['Tất cả', 10, 25, 50, 100, 200]
            ],
            'order': [
                [1, 'desc']
            ]
        });



        table.on('order.dt search.dt', function () {
            table.column(0, {
                search: 'applied',
                order: 'applied'
            }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();

        $('#tableData tfoot th:not(:last-child):not(:nth-last-child(2))').each(function () {
            var title = $(this).text();
            $(this).html("<input type='text' class='tableFooterFilter' placeholder=' ' />");
        });

        table.columns().every(function () {
            var that = this;

            $('input', this.footer()).on('keyup change', function () {
                if (that.search() !== this.value) {
                    that
                        .search(this.value)
                        .draw();
                }
            });
        });
    }

    function initTablePage() {
        table = $('#tableData').DataTable({
            aLengthMenu: [
                //[10, 25, 50, 100, 200, -1],
                //[10, 25, 50, 100, 200, 'Tất cả']
                [-1, 10, 25, 50, 100, 200],
                ['Tất cả', 10, 25, 50, 100, 200]
            ],
            'order': [
                [1, 'desc']
            ],
            orderFixed: [[3, 'desc']],
            'rowsGroup': [1, 7],
            "oLanguage": {
                "sUrl": "/js/Vietnamese.json"
            },
            "initComplete": function (settings, json) {
                table.on('order.dt search.dt', function () {
                    table.column(0, {
                        search: 'applied',
                        order: 'applied'
                    }).nodes().each(function (cell, i) {
                        cell.innerHTML = i + 1;
                    });
                }).draw();

                $('#tableData tfoot th:not(:last-child):not(:nth-last-child(2))').each(function () {
                    var title = $(this).text();
                    $(this).html('<input type="text" class="tableFooterFilter" value="" placeholder="Tìm kiếm ' + title + '" />');
                });

                table.columns().every(function () {
                    var that = this;
                    $('input.tableFooterFilter', this.footer()).on('keyup change', function () {
                        if (that.search() !== this.value) {
                            that.search(this.value).draw();
                        }
                    });
                });
            }
        });
        setTimeout(function () {
            table.page.len(10).draw();
        }, 1000);
    }

    function editItem(id) {
        var accept = JSON.parse(localStorage.getItem("currentLoggedInUser"));
        var x = document.getElementById("btnUpdateItem");
        if (accept.accountTypeName !== "System admin") {
            x.style.display = "none";
        }
        updatingItemID = id;
        $("#modal-id").modal('show');

        let obj = getItemByID(id);
        $("#accountId").val(id > 0 ? obj.id : "");
        $("#accountAccountTypeID").val(id > 0 ? obj.accountTypeID : "");
        $("#accountActive").val(id > 0 ? obj.active : "");
        $("#accountName").val(id > 0 ? obj.name : "");
        $("#accountEmail").val(id > 0 ? obj.email : "");
        $("#accountUsername").val(id > 0 ? obj.username : "");
        $("#accountPassword").val(id > 0 ? obj.password : "");
        $("#accountPhone").val(id > 0 ? obj.phone : "");

        $("#accountIdCardNumber").val(id > 0 ? obj.idCardNumber : "");
        $("#accountCompanyNumber").val(id > 0 ? obj.companyNumber : "");
        $("#accountCompanyName").val(id > 0 ? obj.companyName : "");
        $("#accountCompanyInfo").val(id > 0 ? obj.companyInfo : "");
        $("#accountFacebookId").val(id > 0 ? obj.facebookId : "");
        $("#accountGoogleId").val(id > 0 ? obj.googleId : "");

        $("#accountAddress").val(id > 0 ? obj.address : "");
        $("#accountPhoto").val(id > 0 ? obj.photo : "");
        $("#accountDescription").val(id > 0 ? obj.description : "");
        $("#dateEndMembership").val(id > 0 ? obj.description : "");
        $("#accountInfo").val(id > 0 ? obj.info : "");
        $("#accountCreatedTime").val(id > 0 ? obj.createdTime : "");
        $('#accountAccountTypeID').trigger('change');
        //accountInfoEditor.setData((id > 0 ? obj.info : ''));

        // $("#accountId").val(id > 0 ? obj.id : "");
        // $("#accountName").val(id > 0 ? obj.name : "");
        // $("#accountDescription").val(id > 0 ? obj.description : "");
        // $("#accountCreatedTime").val(id > 0 ? obj.createdTime : "");
        // $("#accountActive").val(id > 0 ? obj.active : "");

        $("#thumbnailPic").attr("src", $("#accountPhoto").val())

        //Update thêm thông tin
        $("#idCardNumberPhoto1").val(id > 0 ? obj.idCardNumberPhoto1 : "");
        $("#idCardNumberPhoto2").val(id > 0 ? obj.idCardNumberPhoto2 : "");
        $("#doB").val(id > 0 ? obj.doB : "");
        $("#zipCode").val(id > 0 ? obj.zipcode : "");
        $("#addressCity").val(id > 0 ? obj.addressCity : "");
        $("#addressDistrict").val(id > 0 ? obj.addressDistrict : "");
        $("#addressWard").val(id > 0 ? obj.addressWard : "");











        if (id == 0) {
            $("#accountActive").val(1);
            $("#accountCreatedTime").val(new Date());
        }
        else {
            // correcting data
            //$('#buyProvinceID').val(obj.provinceID.split(", ")).trigger('change');

        }
        formatNumber();

        //readonly thằng ngày hết hạn membership
        //if (obj.accountTypeID == 10002) {
        //    $("#dateEndMembership").attr("readonly","readonly");
        //}
    }

    //function changeUserType() {
    //    if ($("#accountAccountTypeID").val() == 10001 || $("#accountAccountTypeID").val() == 10003) {
    //        $("#dateEndMembership").removeAttr("readonly");
    //    }
    //    if ($("#accountAccountTypeID").val() == 10002) {
    //        $("#dateEndMembership").attr("readonly", "readonly");
    //    }
    //}

    function updateItem(id) {
        //debugger;
        var actionName = (id == 0 ? "Create" : "Update");
        let obj = getItemByID(id);
        let objName = id > 0 ? obj.name : " ";

        //if ($("#accountAccountTypeID").val() == 10002) {
        //    $("#dateEndMembership").val("");
        //}

        validateInputNumber();

        // "id": $("#accountId").val(),
        // "name": $("#accountName").val(),
        // "description": $("#accountDescription").val(),
        // "createdTime": $("#accountCreatedTime").val(),
        // "active": $("#accountActive").val()
        var updatingObj = {
            "id": $("#accountId").val(),
            "accountTypeID": $("#accountAccountTypeID").val(),
            "active": $("#accountActive").val(),
            "name": $("#accountName").val(),
            "email": $("#accountEmail").val(),
            "username": $("#accountUsername").val(),
            "password": $("#accountPassword").val(),
            "phone": $("#accountPhone").val(),

            "idCardNumber": $("#accountIdCardNumber").val(),
            "companyNumber": $("#accountCompanyNumber").val(),
            "companyName": $("#accountCompanyName").val(),
            "companyInfo": $("#accountCompanyInfo").val(),
            "facebookId": $("#accountFacebookId").val(),
            "googleId": $("#accountGoogleId").val(),

            "address": $("#accountAddress").val(),
            "photo": $("#accountPhoto").val(),
            "description": $("#dateEndMembership").val(),
            "info": $("#accountInfo").val(),
            "createdTime": datetimeFormat($("#accountCreatedTime").val()),
            "isActivated": obj.isActivated,

            // Update thêm trường
            "idCardNumberPhoto1": $("#idCardNumberPhoto1").val(),
            "idCardNumberPhoto2": $("#idCardNumberPhoto2").val(),
            "doB": $("#doB").val(),
            "zipcode": $("#zipCode").val(),
            "addressCity": $("#addressCity").val(),
            "addressDistrict": $("#addressDistrict").val(),
            "addressWard": $("#addressWard").val(),

        };

        // correcting data
        //updatingObj.provinceID = updatingObj.provinceID.join(", ");
        updatingObj.createdTime = "2019-01-01 00:00:00";


        Swal.fire({
            title: 'Bạn có chắc không?',
            text: "Thực hiện " + actionName + " item " + objName,
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Đồng ý!',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.value) {
                $("#modal-id").modal('hide');

                //CALL AJAX TO UPDATE
                if (id > 0) {
                    $.ajax({
                        url: "@{@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description}/account/api/update",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                Swal.fire(
                                    'Updated!',
                                    'Item ' + objName + ' has been successfully updated!',
                                    'success'
                                );
                                updateTable(id, updatingObj, "update");
                                var updatedItemIndex = dataSource.findIndex(item => parseInt(item.id) === id);
                                dataSource[updatedItemIndex] = updatingObj;
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            Swal.fire(
                                'Error!',
                                'Could\' update item, please check your data',
                                'error'
                            );
                        }
                    });
                };

                //CALL AJAX TO CREATE

            }
        })
    }



    function btnNangCap(id) {
        //debugger;
        var actionName = (id == 0 ? "Create" : "Update");
        let obj = getItemByID(id);
        let objName = id > 0 ? obj.name : " ";

        //validateInputNumber();

        // "id": $("#accountId").val(),
        // "name": $("#accountName").val(),
        // "description": $("#accountDescription").val(),
        // "createdTime": $("#accountCreatedTime").val(),
        // "active": $("#accountActive").val()
        var updatingObj = {
            "id": obj.id,
            "accountTypeID": 10003,
            "active": obj.active,
            "name": obj.name,
            "email": obj.email,
            "username": obj.username,
            "password": obj.password,
            "phone": obj.phone,

            "idCardNumber": obj.idCardNumber,
            "companyNumber": obj.companyNumber,
            "companyName": obj.companyName,
            "companyInfo": obj.companyInfo,
            "facebookId": obj.facebookId,
            "googleId": obj.googleId,

            "address": obj.address,
            "photo": obj.photo,
            "description": obj.description,
            "info": obj.info,
            "createdTime": obj.createdTime,

        };

        // correcting data
        //updatingObj.provinceID = updatingObj.provinceID.join(", ");
        updatingObj.createdTime = "2019-01-01 00:00:00";


        Swal.fire({
            title: 'Bạn có chắc không?',
            text: "Thực hiện " + actionName + " item " + objName,
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Đồng ý!',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.value) {
                $("#modal-id").modal('hide');

                //CALL AJAX TO UPDATE
                if (id > 0) {
                    $.ajax({
                        url: "@{@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description}/account/api/UpdateAccountVip",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                Swal.fire(
                                    'Updated!',
                                    'Item ' + objName + ' has been successfully updated!',
                                    'success'
                                );
                                updateTable(id, updatingObj, "update");
                                var updatedItemIndex = dataSource.findIndex(item => parseInt(item.id) === id);
                                dataSource[updatedItemIndex] = updatingObj;
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            Swal.fire(
                                'Error!',
                                'Could\' update item, please check your data',
                                'error'
                            );
                        }
                    });
                };

                //CALL AJAX TO CREATE

            }
        })
    }

    function deleteItem(id) {
        var accept = JSON.parse(localStorage.getItem("currentLoggedInUser"));
        
        let obj = getItemByID(id);
        Swal.fire({
            title: 'Bạn có muốn xóa không?',
            text: "Bạn sẽ không thể phục hồi lại dữ liệu này sau khi xóa!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Đồng ý!',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.value) {

                //CALL AJAX TO DELETE
                $.ajax({
                    url: "@{@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description}/account/api/delete",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ "id": id }),
                    success: function (responseData) {
                        // debugger;
                        if (responseData.status == 200 && responseData.message === "SUCCESS") {
                            Swal.fire(
                                'Deleted!',
                                'Item ' + obj.name + ' has been deleted.',
                                'success'
                            );
                            updateTable(id, 0, "delete");
                        }
                    },
                    error: function (e) {
                        //console.log(e.message);
                        Swal.fire(
                            'Error!',
                            'Item ' + obj.name + ' can\'t be deleted.',
                            'error'
                        );
                    }
                });

            }
        })
    }

    function updateTable(id, obj, action) {
        if (action === "delete") {
            table.row("#row" + id).remove().draw();
        }

        if (action === "add") {
            console.log("Added:" + obj);

            //var addedItems = [obj];
            var addedItems = obj;
            var addedValues = [];


            addedItems.forEach(function (item, index) {
                // console.log(item, index);
                var rowContent = "";
                addedValues.push("<td style='text-align: center;'></td>");
                for (var key in item) {
                    if (item.hasOwnProperty(key) && key!="accountTypeName") {
                        // console.log(key + " -> " + item[key]);
                        if (!hiddenItem.includes(key)) {
                            if (key != "photo") {
                                addedValues.push("<td class='row" + item.id + "-column column-" + key + "' property='" + key + "'>" + item[key] + "</td>");
                            }
                            else {
                                addedValues.push("<td class='row" + item.id + "-column column-" + key + "' property='" + key + "'><img src='" + item[key] + "' style='height:40px;' /></td>");
                            }
                        }
                    }
                }
                addedValues.push("<td style='text-align: center;'><a onclick='editItem(" + item.id + ")'><i class='fa fa-edit fa-2x' style='color:#03a9f4'></i></a></td>");
                addedValues.push("<td style='text-align: center;'><a onclick='deleteItem(" + item.id + ")'><i class='fa fa-trash fa-2x' style='color:#e91e63'></i></a></td>");


                table.row.add(addedValues).draw();
            });
            // location.reload();







        }

         if (action === "update") {
            // alert(id);
            //debugger;
            $(".row"+id+"-column").each(function () {
                var propertyName = $(this).attr("property");
                console.log(propertyName);
                //"Free user" "Membership" "Adminis
                for (var key in obj) {
                    if (key === propertyName && obj.hasOwnProperty(key)) {
                        //this.innerText = obj[key];
                        if (key == "photo") {
                            this.innerHTML = "<td class='row" + obj.id + "-column column-" + key + "' property='" + key + "'><img src='" + obj.photo + "' style='height:40px;' /></td>"
                        }
                        //if ((key="accountTypeID")) {
                        if (key == "accountTypeID" && obj[key]=="@SystemConstant.ACCOUNT_TYPE_END_USER") {
                            this.innerHTML = "<td style='font-size: 1.2em; text-align:center;' class='row" + obj.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-default'>End user</button> </td>";
                        }
                        if (key == "accountTypeID" && obj[key]=="@SystemConstant.ACCOUNT_TYPE_SHOP_MANAGER") {
                            this.innerHTML = "<td style='font-size: 1.2em; text-align:center;' class='row" + obj.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-success'>Shop manager</button></td>";
                        }
                        if (key == "accountTypeID" && obj[key] == "@SystemConstant.ACCOUNT_TYPE_SYSTEM_ADMIN") {
                            this.innerHTML = "<td style='font-size: 1.2em; text-align:center;' class='row" + obj.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-danger'>System admin</button></td>";
                        }
                        if (key == "isActivated") {
                            if (obj[key] == "0") {
                                this.innerHTML = "<td style='font-size: 1.2em; text-align:center;' class='row" + obj.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-danger'>No</button></td>";
                            }
                            else {
                                this.innerHTML = "<td style='font-size: 1.2em; text-align:center;' class='row" + obj.id + "-column column-" + key + "' property='" + key + "'><button type='button' class='btn btn-success'>Yes</button></td>";
                            }
                        }
                    }

                    //}
                }

            });
        }

        //Update columns with foreign key
        // var NO_FKFKUpdateSelector = 'tr';
        // if( !(typeof(id) === 'undefined')) {
        //     NO_FKFKUpdateSelector = '#row'+id;
        // }
        // $('#tableData tbody '+NO_FKFKUpdateSelector+' td[property=NO_FKID]').each(function(){
        //     // debugger;
        //     var accountID = parseInt($(this).attr('class').replace('row','').replace('-column',''));
        //     var accountObj = getItemByID(accountID);
        //     var NO_FKID = parseInt(accountObj.NO_FKID);
        //     var NO_FKObj = NO_FKData.find(item => parseInt(item.id) === NO_FKID);
        //     $(this).text(NO_FKObj.name);
        //     // console.log('FK updated for Staff '+accountID);
        // });

        //var accountTypeFKUpdateSelector = 'tr';
        //if (!(typeof (id) === 'undefined')) {
        //    // debugger;
        //    accountTypeFKUpdateSelector = '#row' + id;
        //    var accountTypeID = parseInt(obj.accountTypeID);
        //    var accountTypeObj = accountTypeData.find(item => parseInt(item.id) === accountTypeID);
        //    $('#tableData tbody ' + accountTypeFKUpdateSelector + ' td[property=accountTypeID]').text(accountTypeObj.name);
        //}
        //else {
        //    $('#tableData tbody ' + accountTypeFKUpdateSelector + ' td[property=accountTypeID]').each(function () {
        //        // debugger;
        //        var accountID = parseInt($(this).attr('class').replace('row', '').replace('-column', ''));
        //        var accountObj = getItemByID(accountID);
        //        var accountTypeID = parseInt(accountObj.accountTypeID);
        //        var accountTypeObj = accountTypeData.find(item => parseInt(item.id) === accountTypeID);
        //        $(this).text(accountTypeObj.name);
        //        // console.log('FK updated for Staff '+accountID);
        //    });
        //}

        formatNumber();
    }


    function getItemByID(id) {
        const result = dataSource.find(item => parseInt(item.id) === id);
        return result;
    }

    function camelToSentenceCase(input) {
        var text = input;
        var result = text.replace(/([A-Z])/g, " $1");
        var finalResult = result.charAt(0).toUpperCase() + result.slice(1);
        return finalResult;
    }

</script>

<style>
    .novaticContainer .btn{
        margin-top : 0 !important;
    }
</style>
