@{
    ViewBag.Title = "File Manager";
    Layout = null;

}
<style>
    #elfinder {
        width:100% !important;
        height:100% !important;
    }
</style>
<div id="elfinder"></div>
<link rel="stylesheet" href="/lib/jqueryui/themes/base/theme.css" />
<link rel="stylesheet" href="/lib/jqueryui/themes/base/jquery-ui.css" />
<link rel="stylesheet" href="/lib/elfinder/css/elfinder.full.css" />
<link rel="stylesheet" href="/lib/elfinder/css/theme.min.css" />
@*<link rel="stylesheet" href="/css/elfinder-material-theme/Material/css/theme-gray.css" />*@


<script src="/lib/jquery/dist/jquery.min.js"></script>
<script src="/lib/jqueryui/jquery-ui.min.js"></script>
<script src="/lib/elfinder/js/elfinder.min.js"></script>

<script type="text/javascript">
    // Documentation for client options:
    // https://github.com/Studio-42/elFinder/wiki/Client-configuration-options
    $(document).ready(function () {
        var myCommands = elFinder.prototype._options.commands;

        // Not yet implemented commands in elFinder.NetCore
        var disabled = ['callback', 'chmod', 'editor', 'netmount', 'ping', 'search', 'zipdl', 'help'];
        elFinder.prototype.i18.en.messages.TextArea = "Edit";

        $.each(disabled, function (i, cmd) {
            (idx = $.inArray(cmd, myCommands)) !== -1 && myCommands.splice(idx, 1);
        });

        var options = {
            baseUrl: "@Url.Content("/lib/elfinder/")",
            url: "@Url.Action("Connector")",
            rememberLastDir: false,
            commands: myCommands,
            lang: 'vi',
            uiOptions: {
                toolbar: [
                    ['back', 'forward'],
                    ['reload'],
                    ['home', 'up'],
                    ['mkdir', 'mkfile', 'upload'],
                    ['open', 'download'],
                    ['undo', 'redo'],
                    ['info'],
                    ['quicklook'],
                    ['copy', 'cut', 'paste'],
                    ['rm'],
                    ['duplicate', 'rename', 'edit'],
                    ['selectall', 'selectnone', 'selectinvert'],
                    ['view', 'sort']
                ]
            },
            //onlyMimes: ["image", "text/plain"] // Get files of requested mime types only
            lang: 'vi',
            resizable: false,
            getfile: {
                onlyURL: true,
                multiple: false,
                folders: false,
                oncomplete: ''
            },
            handlers: {
                dblclick: function (event, elfinderInstance) {
                    fileInfo = elfinderInstance.file(event.data.file);

                    if (fileInfo.mime != 'directory') {
                        parent.fileSelect(elfinderInstance.url(event.data.file));
                        //$('#elfinder').dialog('close');
                        return false; // stop elfinder
                    }
                },
                destroy: function (event, elfinderInstance) {
                    elfinder.dialog('close');

                }
            }
        };

        $('#elfinder').elfinder(options).elfinder('instance');
    });
</script>