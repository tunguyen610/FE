

@{
    ViewData["Title"] = "Bài viết";
    Layout = "_NovaticAdmin";
}


<div class="page-header card">
    <div class="col">
        <div class="page-header-title">
            <i class="fa fa-server"></i>
            <div class="d-inline">
                <h3 class="tableTitle">Bài viết</h3>
            </div>
        </div>

        <a href="#" id="btnAddItem" onclick="editItem(0);" class="btn btn-brand btn-elevate btn-icon-sm">
            <i class="fa fa-plus"></i>
            <span class='hideOnMobile'>New Record</span>
        </a>
    </div>
</div>

<div class="pcoded-inner-content">
    <div class="main-body">
        <div class="page-wrapper">

            <!-- Page-body start -->
            <div class="page-body">
                <div class="card">
                    <div class="card-block novaticContainer">
                        <div class="dt-responsive table-responsive">

                            <table id="tableData" class="table table-hover">
                                <thead>
                                    <!--<tr>
                                                                <th>Index</th>
                                                                <th>Apply Type ID</th>
                                                                <th>Active</th>
                                                                <th>Apply Type Name</th>
                                                                <th>Description</th>
                                                                <th>Created Time</th>
                                                                <th>Detail</th>
                                                                <th>Delete</th>
                                                            </tr>-->
                                <th>Index</th>
                                <th>ID</th>
                                <th>Loại bài viết</th>
                                <th>Danh mục bài viết</th>
                                <th>Layout template</th>
                                <th>Trạng thái xuất bản</th>
                                <th>Trạng thái bình luận</th>
                                <th>Tác giả</th>
                                <th>URL</th>
                                <th>URL</th>
                                <th>Photo</th>
                                <th>Video</th>
                                <th>Active</th>
                                <th>Active</th>
                                <th>Tiêu đề</th>
                                <th>Mô tả</th>
                                <th>Nội dung</th>
                                <th>Ngày xuất bản</th>
                                <th>Ngày tạo</th>

                                <th>Detail</th>
                                <th>Delete</th>
                                </thead>
                                <tbody>
                                </tbody>
                                <tfoot>
                                <th>Index</th>
                                <th>ID</th>
                                <th>Loại bài viết</th>
                                <th>Danh mục bài viết</th>
                                <th>Layout template</th>
                                <th>Trạng thái xuất bản</th>
                                <th>Trạng thái bình luận</th>
                                <th>Tác giả</th>
                                <th>URL</th>
                                <th>URL</th>
                                <th>Photo</th>
                                <th>Video</th>
                                <th>Active</th>
                                <th>Active</th>
                                <th>Tiêu đề</th>
                                <th>Mô tả</th>
                                <th>Nội dung</th>
                                <th>Ngày xuất bản</th>
                                <th>Ngày tạo</th>

                                <th> </th>
                                <th> </th>
                                </tfoot>
                            </table>

                            <div class="modal fade" id="modal-id">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                        <div class="modal-header bg-gradient-info">
                                            <button type="button" class="close" data-dismiss="modal"
                                                    aria-hidden="true">
                                                &times;
                                            </button>
                                            <h4 class="modal-title"><i class="fa fa-edit"></i> Detail item</h4>
                                        </div>
                                        <div class="modal-body">


                                            <form action="" method="POST"
                                                  onsubmit='updateItem(updatingItemID); return false;' role="form">

                                                <!-- <div class="form-group">
                                                                    <label for="">Apply type ID</label>
                                                                    <input type="text" class="form-control"
                                                                        id="pageId" required readonly
                                                                        placeholder="">
                                                                </div>


                                                                <div class='form-group'>
                                                                    <label for=''>Apply type name</label>
                                                                    <input type='text' class='form-control'
                                                                        id='pageName' required
                                                                        placeholder=''>
                                                                </div>


                                                                <div class='form-group'>
                                                                    <label for=''>Description</label>
                                                                    <input type='text' class='form-control'
                                                                        id='pageDescription'
                                                                        placeholder=''>
                                                                </div>


                                                                <div class='form-group'>
                                                                    <label for=''>CreatedTime</label>
                                                                    <input type='text'
                                                                        class='form-control datetimepicker'
                                                                        id='pageCreatedTime'
                                                                        placeholder=''>
                                                                </div>


                                                                <div class='form-group' style="">
                                                                    <label for=''>Active</label>
                                                                    <input type='text' class='form-control'
                                                                        id='pageActive' readonly
                                                                        placeholder=''>
                                                                </div>
                                                                -->
                                                <div class="form-group">
                                                    <label for="">ID</label><span class='required'>*</span>
                                                    <input type="number" class="form-control input-id" value="0"
                                                           id="pageId" required readonly
                                                           placeholder="">
                                                </div><div class='form-group row selectContainer'>
                                                    <label class=''>Loại bài viết</label><span class='required'>*</span>
                                                    <div class='col-sm-12'>
                                                        <select name='select' required id='pagePostTypeID' class='form-control fill dataSelect  input-postTypeID' style=' border: 1px solid #e9ecef; '>
                                                        </select>
                                                    </div>
                                                </div>
                                                <script>
                                                    var accountData = [];
                                                    function loadDataSelectAccount() {
                                                        $.ajax({
                                                            url: 'http://localhost/generator/api/account/read.php',
                                                            type: 'GET',
                                                            async: 'true',
                                                            contentType: 'application/json',
                                                            success: function (responseData) {
                                                                console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                                // debugger;
                                                                var data = responseData.data;
                                                                accountData = data;
                                                                data.forEach(function (item, index) {
                                                                    var data = {
                                                                        id: item.id,
                                                                        text: item.name
                                                                    };
                                                                    var newOption = new Option(data.text, data.id, false, false);
                                                                    $('#pagePostTypeID').append(newOption).trigger('change');
                                                                });
                                                            },
                                                            error: function (e) {
                                                                //console.log(e.message);
                                                            }
                                                        });
                                                    }
                                                    $(document).ready(function () {
                                                        loadDataSelectAccount();
                                                    });
                                                </script><div class='form-group row selectContainer'>
                                                    <label class=''>Danh mục bài viết</label><span class='required'>*</span>
                                                    <div class='col-sm-12'>
                                                        <select name='select' required id='pagePostCategoryID' class='form-control fill dataSelect  input-postCategoryID' style=' border: 1px solid #e9ecef; '>
                                                        </select>
                                                    </div>
                                                </div>
                                                <script>
                                                    var accountData = [];
                                                    function loadDataSelectAccount() {
                                                        $.ajax({
                                                            url: 'http://localhost/generator/api/account/read.php',
                                                            type: 'GET',
                                                            async: 'true',
                                                            contentType: 'application/json',
                                                            success: function (responseData) {
                                                                console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                                // debugger;
                                                                var data = responseData.data;
                                                                accountData = data;
                                                                data.forEach(function (item, index) {
                                                                    var data = {
                                                                        id: item.id,
                                                                        text: item.name
                                                                    };
                                                                    var newOption = new Option(data.text, data.id, false, false);
                                                                    $('#pagePostCategoryID').append(newOption).trigger('change');
                                                                });
                                                            },
                                                            error: function (e) {
                                                                //console.log(e.message);
                                                            }
                                                        });
                                                    }
                                                    $(document).ready(function () {
                                                        loadDataSelectAccount();
                                                    });
                                                </script><div class='form-group row selectContainer'>
                                                    <label class=''>Layout template</label><span class='required'>*</span>
                                                    <div class='col-sm-12'>
                                                        <select name='select' required id='pagePostLayoutID' class='form-control fill dataSelect  input-postLayoutID' style=' border: 1px solid #e9ecef; '>
                                                        </select>
                                                    </div>
                                                </div>
                                                <script>
                                                    var accountData = [];
                                                    function loadDataSelectAccount() {
                                                        $.ajax({
                                                            url: 'http://localhost/generator/api/account/read.php',
                                                            type: 'GET',
                                                            async: 'true',
                                                            contentType: 'application/json',
                                                            success: function (responseData) {
                                                                console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                                // debugger;
                                                                var data = responseData.data;
                                                                accountData = data;
                                                                data.forEach(function (item, index) {
                                                                    var data = {
                                                                        id: item.id,
                                                                        text: item.name
                                                                    };
                                                                    var newOption = new Option(data.text, data.id, false, false);
                                                                    $('#pagePostLayoutID').append(newOption).trigger('change');
                                                                });
                                                            },
                                                            error: function (e) {
                                                                //console.log(e.message);
                                                            }
                                                        });
                                                    }
                                                    $(document).ready(function () {
                                                        loadDataSelectAccount();
                                                    });
                                                </script><div class='form-group row selectContainer'>
                                                    <label class=''>Trạng thái xuất bản</label><span class='required'>*</span>
                                                    <div class='col-sm-12'>
                                                        <select name='select' required id='pagePostPublishStatusID' class='form-control fill dataSelect  input-postPublishStatusID' style=' border: 1px solid #e9ecef; '>
                                                        </select>
                                                    </div>
                                                </div>
                                                <script>
                                                    var accountData = [];
                                                    function loadDataSelectAccount() {
                                                        $.ajax({
                                                            url: 'http://localhost/generator/api/account/read.php',
                                                            type: 'GET',
                                                            async: 'true',
                                                            contentType: 'application/json',
                                                            success: function (responseData) {
                                                                console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                                // debugger;
                                                                var data = responseData.data;
                                                                accountData = data;
                                                                data.forEach(function (item, index) {
                                                                    var data = {
                                                                        id: item.id,
                                                                        text: item.name
                                                                    };
                                                                    var newOption = new Option(data.text, data.id, false, false);
                                                                    $('#pagePostPublishStatusID').append(newOption).trigger('change');
                                                                });
                                                            },
                                                            error: function (e) {
                                                                //console.log(e.message);
                                                            }
                                                        });
                                                    }
                                                    $(document).ready(function () {
                                                        loadDataSelectAccount();
                                                    });
                                                </script><div class='form-group row selectContainer'>
                                                    <label class=''>Trạng thái bình luận</label><span class='required'>*</span>
                                                    <div class='col-sm-12'>
                                                        <select name='select' required id='pagePostCommentStatusID' class='form-control fill dataSelect  input-postCommentStatusID' style=' border: 1px solid #e9ecef; '>
                                                        </select>
                                                    </div>
                                                </div>
                                                <script>
                                                    var accountData = [];
                                                    function loadDataSelectAccount() {
                                                        $.ajax({
                                                            url: 'http://localhost/generator/api/account/read.php',
                                                            type: 'GET',
                                                            async: 'true',
                                                            contentType: 'application/json',
                                                            success: function (responseData) {
                                                                console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                                // debugger;
                                                                var data = responseData.data;
                                                                accountData = data;
                                                                data.forEach(function (item, index) {
                                                                    var data = {
                                                                        id: item.id,
                                                                        text: item.name
                                                                    };
                                                                    var newOption = new Option(data.text, data.id, false, false);
                                                                    $('#pagePostCommentStatusID').append(newOption).trigger('change');
                                                                });
                                                            },
                                                            error: function (e) {
                                                                //console.log(e.message);
                                                            }
                                                        });
                                                    }
                                                    $(document).ready(function () {
                                                        loadDataSelectAccount();
                                                    });
                                                </script><div class='form-group row selectContainer'>
                                                    <label class=''>Tác giả</label><span class='required'>*</span>
                                                    <div class='col-sm-12'>
                                                        <select name='select' required id='pagePostAccountID' class='form-control fill dataSelect  input-postAccountID' style=' border: 1px solid #e9ecef; '>
                                                        </select>
                                                    </div>
                                                </div>
                                                <script>
                                                    var accountData = [];
                                                    function loadDataSelectAccount() {
                                                        $.ajax({
                                                            url: 'http://localhost/generator/api/account/read.php',
                                                            type: 'GET',
                                                            async: 'true',
                                                            contentType: 'application/json',
                                                            success: function (responseData) {
                                                                console.log(new Date().getSeconds() + ':' + new Date().getMilliseconds() + ' - loaded account');
                                                                // debugger;
                                                                var data = responseData.data;
                                                                accountData = data;
                                                                data.forEach(function (item, index) {
                                                                    var data = {
                                                                        id: item.id,
                                                                        text: item.name
                                                                    };
                                                                    var newOption = new Option(data.text, data.id, false, false);
                                                                    $('#pagePostAccountID').append(newOption).trigger('change');
                                                                });
                                                            },
                                                            error: function (e) {
                                                                //console.log(e.message);
                                                            }
                                                        });
                                                    }
                                                    $(document).ready(function () {
                                                        loadDataSelectAccount();
                                                    });
                                                </script> <div class="form-group" style="display:none ">
                                                    <label for="">Active</label><span class='required'>*</span>
                                                    <input type="number" class="form-control input-active" value="0"
                                                           id="pageActive" required
                                                           placeholder="">
                                                </div>   <div class="form-group">
                                                    <label for="">URL</label><span class='required'>*</span>
                                                    <input type="text" class="form-control  input-url"
                                                           id="pageUrl" required
                                                           placeholder="">
                                                </div>   <div class="form-group">
                                                    <label for="">URL</label><span class='required'>*</span>
                                                    <input type="text" class="form-control  input-guID"
                                                           id="pageGuID" required
                                                           placeholder="">
                                                </div>   <div class="form-group">
                                                    <label for="">Photo</label><span class='required'>*</span>
                                                    <input type="text" class="form-control  input-photo"
                                                           id="pagePhoto" required
                                                           placeholder="">
                                                </div>   <div class="form-group">
                                                    <label for="">Video</label><span class='required'>*</span>
                                                    <input type="text" class="form-control  input-video"
                                                           id="pageVideo" required
                                                           placeholder="">
                                                </div> <div class="form-group">
                                                    <label for="">Active</label><span class='required'>*</span>
                                                    <input type="number" class="form-control input-viewCount" value="0"
                                                           id="pageViewCount" required
                                                           placeholder="">
                                                </div> <div class="form-group">
                                                    <label for="">Active</label><span class='required'>*</span>
                                                    <input type="number" class="form-control input-commentCount" value="0"
                                                           id="pageCommentCount" required
                                                           placeholder="">
                                                </div>   <div class="form-group">
                                                    <label for="">Tiêu đề</label><span class='required'>*</span>
                                                    <input type="text" class="form-control  input-name"
                                                           id="pageName" required
                                                           placeholder="">
                                                </div>
                                                <div class="form-group">
                                                    <label for="">Mô tả</label>
                                                    <textarea class="form-control  input-description " rows="2" id="pageDescription"></textarea>
                                                </div>
                                                <div class="form-group">
                                                    <label for="">Nội dung</label>
                                                    <textarea class="form-control  input-content " rows="2" id="pageContent"></textarea>
                                                </div>
                                                <script>
                                                    var pageContentEditor;

                                                    //var pageContentEditor = CKEDITOR.replace("pageContent", {height:700});
                                                    //ClassicEditor
                                                    //    .create( document.querySelector('#pageContent'))
                                                    //    .then( editor => {
                                                    //        // console.log( 'Editor was initialized', editor );
                                                    //        pageContentEditor = editor;
                                                    //        editor.model.document.on( 'change:data', ( evt, data ) => {
                                                    //            // debugger;
                                                    //            // console.log('Updated:'+ data );
                                                    //            $('#pageContent').val(pageContentEditor.getData());
                                                    //        });
                                                    //    })
                                                    //    .catch( err => {
                                                    //        console.error( err.stack );
                                                    //    });
                                                </script>   <div class="form-group">
                                                    <label for="">Tiêu đề tiếng Anh</label><span class='required'>*</span>
                                                    <input type="text" class="form-control  input-name2"
                                                           id="pageName2" required
                                                           placeholder="">
                                                </div>
                                                <div class="form-group">
                                                    <label for="">Mô tả tiếng Anh</label>
                                                    <textarea class="form-control  input-description2 " rows="2" id="pageDescription2"></textarea>
                                                </div>
                                                <div class="form-group">
                                                    <label for="">Nội dung tiếng Anh</label>
                                                    <textarea class="form-control  input-content2 " rows="2" id="pageContent2"></textarea>
                                                </div>
                                                <script>
                                                    var pageContent2Editor;

                                                    //var pageContent2Editor = CKEDITOR.replace("pageContent2", {height:700});
                                                    //ClassicEditor
                                                    //    .create( document.querySelector('#pageContent2'))
                                                    //    .then( editor => {
                                                    //        // console.log( 'Editor was initialized', editor );
                                                    //        pageContent2Editor = editor;
                                                    //        editor.model.document.on( 'change:data', ( evt, data ) => {
                                                    //            // debugger;
                                                    //            // console.log('Updated:'+ data );
                                                    //            $('#pageContent2').val(pageContent2Editor.getData());
                                                    //        });
                                                    //    })
                                                    //    .catch( err => {
                                                    //        console.error( err.stack );
                                                    //    });
                                                </script><div class='form-group'>
                                                    <label for=''>Ngày xuất bản </label><span class='required'>*</span>
                                                    <div class='input-group date datetimepicker  input-publishedTime' id='pagePublishedTimeDiv'>
                                                        <input type='text' id="pagePublishedTime" required class="form-control" required />
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </div>
                                                </div><div class='form-group'>
                                                    <label for=''>Ngày tạo </label><span class='required'>*</span>
                                                    <div class='input-group date datetimepicker  input-createdTime' id='pageCreatedTimeDiv'>
                                                        <input type='text' id="pageCreatedTime" required class="form-control" required />
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </div>
                                                </div>




                                                <input style="display:none" id="hiddenSubmit" type="submit"
                                                       class="btn btn-default" value="Save changes">
                                            </form>


                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default"
                                                    data-dismiss="modal">
                                                Close
                                            </button>
                                            <button type="button" class="btn btn-primary" id="btnUpdateItem"
                                                    onclick="document.getElementById('hiddenSubmit').click();">
                                                Save
                                                changes
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


<script>
        var hiddenItem = ["active","name2","description2","content2"];
        var dataSource = [];
        var updatingItemID = 0;
        var tableUpdating = 0;
        var table;

        $(document).ready(function () {
            // Load data
            loadData();
            // includeLibrary();

            // Datetime picker
            $('.datetimepicker').datetimepicker({
                format: 'DD-MM-YYYY HH:mm:ss'
            });

            $('.dataSelect').select2();

            $(".datetimepicker").on('dp.change', function (e) {
                // console.log(this.value);
                this.value = moment(this.value).format("DD-MM-YYYY HH:mm:ss");
                // console.log(this.value);
            })

        });


        function loadData() {
            $.ajax({
                url: "@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description/page/api/list",
                type: "GET",
                contentType: "application/json",
                success: function (responseData) {
                    // debugger;
                    var data = responseData.data;
                    dataSource = data;




                    data.forEach(function (item, index) {
                        // console.log(item, index);
                        var rowContent = "";
                        rowContent += "<td style='text-align: center;'>" + (index + 1) + "</td>";
                        for (var key in item) {
                            if (item.hasOwnProperty(key)) {
                                // console.log(key + " -> " + item[key]);
                                if (!hiddenItem.includes(key)) {
                                    rowContent += "<td class='row"+item.id+"-column column-"+key+"' property='"+key+"'>" + item[key] + "</td>";
                                }
                            }
                        }
                        rowContent += "<td style='text-align: center;'><a onclick='editItem(" + item.id + ")'><i class='fa fa-edit fa-2x' style='color:#03a9f4'></i></a></td>";
                        rowContent += "<td style='text-align: center;'><a onclick='deleteItem(" + item.id + ")'><i class='fa fa-trash fa-2x' style='color:#e91e63'></i></a></td>";

                        var newRow = "<tr id='row"+item.id+"' >" + rowContent + "</tr>";
                        $(newRow).appendTo($("#tableData tbody"));

                        // $("#tableData #dummyRow").after("<tr id='row"+item.id+"' >" + rowContent + "</tr>");
                    });

                    //Init datatable
                    if (tableUpdating === 0) {
                        initTable();
                    }

                    //update data with foreign key
                    updateTable();
                },
                error: function (e) {
                    //console.log(e.message);
                    initTable();
                }
            });
        }

        function initTable(){
            table = $('#tableData').DataTable({
                aLengthMenu: [
                    [10, 25, 50, 100, 200, -1],
                    [10, 25, 50, 100, 200, 'Tất cả']
                ],
                'order': [
                    [1, 'desc']
                ]
            });



            table.on('order.dt search.dt', function() {
                table.column(0, {
                    search: 'applied',
                    order: 'applied'
                }).nodes().each(function(cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

            $('#tableData tfoot th:not(:last-child):not(:nth-last-child(2))').each(function() {
                var title = $(this).text();
                $(this).html("<input type='text' class='tableFooterFilter' placeholder=' ' />");
            });

            table.columns().every(function() {
                var that = this;

                $('input', this.footer()).on('keyup change', function() {
                    if (that.search() !== this.value) {
                        that
                            .search(this.value)
                            .draw();
                    }
                });
            });
        }

        function editItem(id) {
            updatingItemID = id;
            $("#modal-id").modal('show');

            let obj = getItemByID(id);
            		$("#pageId").val(id > 0 ? obj.id : "");
		$("#pagePostTypeID").val(id > 0 ? obj.postTypeID : "");
		$("#pagePostCategoryID").val(id > 0 ? obj.postCategoryID : "");
		$("#pagePostLayoutID").val(id > 0 ? obj.postLayoutID : "");
		$("#pagePostPublishStatusID").val(id > 0 ? obj.postPublishStatusID : "");
		$("#pagePostCommentStatusID").val(id > 0 ? obj.postCommentStatusID : "");
		$("#pagePostAccountID").val(id > 0 ? obj.postAccountID : "");
		$("#pageActive").val(id > 0 ? obj.active : "");
		$("#pageUrl").val(id > 0 ? obj.url : "");
		$("#pageGuID").val(id > 0 ? obj.guID : "");
		$("#pagePhoto").val(id > 0 ? obj.photo : "");
		$("#pageVideo").val(id > 0 ? obj.video : "");
		$("#pageViewCount").val(id > 0 ? obj.viewCount : "");
		$("#pageCommentCount").val(id > 0 ? obj.commentCount : "");
		$("#pageName").val(id > 0 ? obj.name : "");
		$("#pageDescription").val(id > 0 ? obj.description : "");
		$("#pageContent").val(id > 0 ? obj.content : "");
		$("#pageName2").val(id > 0 ? obj.name2 : "");
		$("#pageDescription2").val(id > 0 ? obj.description2 : "");
		$("#pageContent2").val(id > 0 ? obj.content2 : "");
		$("#pagePublishedTime").val(id > 0 ? obj.publishedTime : "");
		$("#pageCreatedTime").val(id > 0 ? obj.createdTime : "");
$('#pagePostTypeID').trigger('change');
$('#pagePostCategoryID').trigger('change');
$('#pagePostLayoutID').trigger('change');
$('#pagePostPublishStatusID').trigger('change');
$('#pagePostCommentStatusID').trigger('change');
            $('#pagePostAccountID').trigger('change');


                    pageContentEditor = CKEDITOR.replace("pageContent", {height:700});
                    pageContent2Editor = CKEDITOR.replace("pageContent2", {height:700});
pageContentEditor.setData((id > 0 ? obj.content : ''));
pageContent2Editor.setData((id > 0 ? obj.content2 : ''));

            // $("#pageId").val(id > 0 ? obj.id : "");
            // $("#pageName").val(id > 0 ? obj.name : "");
            // $("#pageDescription").val(id > 0 ? obj.description : "");
            // $("#pageCreatedTime").val(id > 0 ? obj.createdTime : "");
            // $("#pageActive").val(id > 0 ? obj.active : "");

            if(id==0){
                $("#pageActive").val(1);
                $("#pageCreatedTime").val(new Date());
            }
            else{
                // correcting data
                //$('#buyProvinceID').val(obj.provinceID.split(", ")).trigger('change');

            }
            formatNumber();
        }


        function updateItem(id) {
            var actionName = (id == 0 ? "Create" : "Update");
            let obj = getItemByID(id);
            let objName = id > 0 ? obj.name : " ";

            validateInputNumber();

            // "id": $("#pageId").val(),
            // "name": $("#pageName").val(),
            // "description": $("#pageDescription").val(),
            // "createdTime": $("#pageCreatedTime").val(),
            // "active": $("#pageActive").val()
            var updatingObj = {
                		"id": $("#pageId").val(),
		"postTypeID": $("#pagePostTypeID").val(),
		"postCategoryID": $("#pagePostCategoryID").val(),
		"postLayoutID": $("#pagePostLayoutID").val(),
		"postPublishStatusID": $("#pagePostPublishStatusID").val(),
		"postCommentStatusID": $("#pagePostCommentStatusID").val(),
		"postAccountID": $("#pagePostAccountID").val(),
		"active": $("#pageActive").val(),
		"url": $("#pageUrl").val(),
		"guID": $("#pageGuID").val(),
		"photo": $("#pagePhoto").val(),
		"video": $("#pageVideo").val(),
		"viewCount": $("#pageViewCount").val(),
		"commentCount": $("#pageCommentCount").val(),
		"name": $("#pageName").val(),
		"description": $("#pageDescription").val(),
		"content": pageContentEditor.getData(),
		"name2": $("#pageName2").val(),
		"description2": $("#pageDescription2").val(),
		"content2": pageContent2Editor.getData(),
		"publishedTime": datetimeFormat($("#pagePublishedTime").val()),
		"createdTime": datetimeFormat($("#pageCreatedTime").val()),

            };

            // correcting data
            //updatingObj.provinceID = updatingObj.provinceID.join(", ");


            Swal.fire({
                title: 'Are you sure?',
                text: "Performing " + actionName + " item " + objName,
                type: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#443',
                confirmButtonText: 'Yes, confirm!'
            }).then((result) => {
                if (result.value) {
                    $("#modal-id").modal('hide');

                    //CALL AJAX TO UPDATE
                    if (id > 0) {
                        $.ajax({
                            url: "@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description/page/api/update",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                // debugger;
                                if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                    Swal.fire(
                                        'Updated!',
                                        'Item ' + objName + ' has been successfully updated!',
                                        'success'
                                    );
                                    updateTable(id,updatingObj,"update");
                                    var updatedItemIndex= dataSource.findIndex(item => parseInt(item.id) === id);
                                    dataSource[updatedItemIndex] = updatingObj;
                                }
                            },
                            error: function (e) {
                                //console.log(e.message);
                                Swal.fire(
                                    'Error!',
                                    'Could\' update item, please check your data',
                                    'error'
                                );
                            }
                        });
                    };

                    //CALL AJAX TO CREATE
                    if (id == 0) {
                        updatingObj.id = 1;
                        delete updatingObj["id"]
                        updatingObj.active = 1;
                        updatingObj.createdTime = new Date();
                        console.log(updatingObj);
                        $.ajax({
                            url: "@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description/page/api/add",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                // debugger;
                                if (responseData.status == 201 && responseData.message === "CREATED") {
                                    Swal.fire(
                                        'Created!',
                                        'New item has been successfully created!',
                                        'success'
                                    );
                                    updatingObj = responseData.data;
                                    dataSource.push(updatingObj);
                                    updateTable(0,updatingObj,"add");
                                }
                            },
                            error: function (e) {
                                //console.log(e.message);
                                Swal.fire(
                                    'Error!',
                                    'Could\' create item, please check your data',
                                    'error'
                                );
                            }
                        });
                    }
                }
            })
        }

        function deleteItem(id) {
            let obj = getItemByID(id);
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {

                    //CALL AJAX TO DELETE
                    $.ajax({
                        url: "@ViewBag.SystemConfigs["HOMEPAGE_URL"].Description/page/api/delete",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ "id": id }),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                Swal.fire(
                                    'Deleted!',
                                    'Item ' + obj.name + ' has been deleted.',
                                    'success'
                                );
                                updateTable(id,0,"delete");
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            Swal.fire(
                                'Error!',
                                'Item ' + obj.name + ' can\'t be deleted.',
                                'error'
                            );
                        }
                    });

                }
            })
        }

        function updateTable(id,obj,action) {
            if(action === "delete"){
                table.row("#row"+id).remove().draw();
            }

            if(action === "add"){
                console.log("Added:"+obj);

                //var addedItems = [obj];
                var addedItems = obj;
                var addedValues =[];


                addedItems.forEach(function (item, index) {
                    // console.log(item, index);
                    var rowContent = "";
                    addedValues.push("<td style='text-align: center;'></td>");
                    for (var key in item) {
                        if (item.hasOwnProperty(key)) {
                            // console.log(key + " -> " + item[key]);
                            if (!hiddenItem.includes(key)) {
                                addedValues.push("<td class='row"+item.id+"-column column-"+key+"' property='"+key+"'>" + item[key] + "</td>");
                            }
                        }
                    }
                    addedValues.push("<td style='text-align: center;'><a onclick='editItem(" + item.id + ")'><i class='fa fa-edit fa-2x' style='color:#03a9f4'></i></a></td>");
                    addedValues.push("<td style='text-align: center;'><a onclick='deleteItem(" + item.id + ")'><i class='fa fa-trash fa-2x' style='color:#e91e63'></i></a></td>");

                    table.row.add(addedValues).draw();
                });
                // location.reload();
            }

            if(action === "update"){
                // alert(id);
                $(".row"+id+"-column").each(function(){
                    var propertyName = $(this).attr("property");
                    console.log(propertyName);

                    for (var key in obj) {
                        if (key === propertyName && obj.hasOwnProperty(key)) {
                            this.innerText = obj[key];
                        }
                    }

                });
            }

            //Update columns with foreign key
            // var NO_FKFKUpdateSelector = 'tr';
            // if( !(typeof(id) === 'undefined')) {
            //     NO_FKFKUpdateSelector = '#row'+id;
            // }
            // $('#tableData tbody '+NO_FKFKUpdateSelector+' td[property=NO_FKID]').each(function(){
            //     // debugger;
            //     var pageID = parseInt($(this).attr('class').replace('row','').replace('-column',''));
            //     var pageObj = getItemByID(pageID);
            //     var NO_FKID = parseInt(pageObj.NO_FKID);
            //     var NO_FKObj = NO_FKData.find(item => parseInt(item.id) === NO_FKID);
            //     $(this).text(NO_FKObj.name);
            //     // console.log('FK updated for Staff '+pageID);
            // });

            var accountFKUpdateSelector = 'tr';
            if( !(typeof(id) === 'undefined')) {
                // debugger;
                accountFKUpdateSelector = '#row'+id;
                var accountID = parseInt(obj.accountID);
                var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').text(accountObj.name);
            }
            else{
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').each(function(){
                    // debugger;
                    var pageID = parseInt($(this).attr('class').replace('row','').replace('-column',''));
                    var pageObj = getItemByID(pageID);
                    var accountID = parseInt(pageObj.accountID);
                    var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                    $(this).text(accountObj.name);
                    // console.log('FK updated for Staff '+pageID);
                });
            }
            var accountFKUpdateSelector = 'tr';
            if( !(typeof(id) === 'undefined')) {
                // debugger;
                accountFKUpdateSelector = '#row'+id;
                var accountID = parseInt(obj.accountID);
                var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').text(accountObj.name);
            }
            else{
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').each(function(){
                    // debugger;
                    var pageID = parseInt($(this).attr('class').replace('row','').replace('-column',''));
                    var pageObj = getItemByID(pageID);
                    var accountID = parseInt(pageObj.accountID);
                    var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                    $(this).text(accountObj.name);
                    // console.log('FK updated for Staff '+pageID);
                });
            }
            var accountFKUpdateSelector = 'tr';
            if( !(typeof(id) === 'undefined')) {
                // debugger;
                accountFKUpdateSelector = '#row'+id;
                var accountID = parseInt(obj.accountID);
                var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').text(accountObj.name);
            }
            else{
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').each(function(){
                    // debugger;
                    var pageID = parseInt($(this).attr('class').replace('row','').replace('-column',''));
                    var pageObj = getItemByID(pageID);
                    var accountID = parseInt(pageObj.accountID);
                    var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                    $(this).text(accountObj.name);
                    // console.log('FK updated for Staff '+pageID);
                });
            }
            var accountFKUpdateSelector = 'tr';
            if( !(typeof(id) === 'undefined')) {
                // debugger;
                accountFKUpdateSelector = '#row'+id;
                var accountID = parseInt(obj.accountID);
                var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').text(accountObj.name);
            }
            else{
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').each(function(){
                    // debugger;
                    var pageID = parseInt($(this).attr('class').replace('row','').replace('-column',''));
                    var pageObj = getItemByID(pageID);
                    var accountID = parseInt(pageObj.accountID);
                    var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                    $(this).text(accountObj.name);
                    // console.log('FK updated for Staff '+pageID);
                });
            }
            var accountFKUpdateSelector = 'tr';
            if( !(typeof(id) === 'undefined')) {
                // debugger;
                accountFKUpdateSelector = '#row'+id;
                var accountID = parseInt(obj.accountID);
                var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').text(accountObj.name);
            }
            else{
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').each(function(){
                    // debugger;
                    var pageID = parseInt($(this).attr('class').replace('row','').replace('-column',''));
                    var pageObj = getItemByID(pageID);
                    var accountID = parseInt(pageObj.accountID);
                    var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                    $(this).text(accountObj.name);
                    // console.log('FK updated for Staff '+pageID);
                });
            }
            var accountFKUpdateSelector = 'tr';
            if( !(typeof(id) === 'undefined')) {
                // debugger;
                accountFKUpdateSelector = '#row'+id;
                var accountID = parseInt(obj.accountID);
                var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').text(accountObj.name);
            }
            else{
                $('#tableData tbody '+accountFKUpdateSelector+' td[property=accountID]').each(function(){
                    // debugger;
                    var pageID = parseInt($(this).attr('class').replace('row','').replace('-column',''));
                    var pageObj = getItemByID(pageID);
                    var accountID = parseInt(pageObj.accountID);
                    var accountObj = accountData.find(item => parseInt(item.id) === accountID);
                    $(this).text(accountObj.name);
                    // console.log('FK updated for Staff '+pageID);
                });
            }

            formatNumber();
        }


        function getItemByID(id) {
            const result = dataSource.find(item => parseInt(item.id) === id);
            return result;
        }

        function camelToSentenceCase(input) {
            var text = input;
            var result = text.replace(/([A-Z])/g, " $1");
            var finalResult = result.charAt(0).toUpperCase() + result.slice(1);
            return finalResult;
        }
</script>